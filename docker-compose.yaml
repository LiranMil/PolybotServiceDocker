version: '3.8'

services:
  mongo1:
    image: mongo:5
    container_name: mongo1
    command: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "0.0.0.0"]
    networks:
      - mongoCluster
    ports:
      - "27017:27017"
    volumes:
      - mongo1_data:/data/db

  mongo2:
    image: mongo:5
    container_name: mongo2
    command: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "0.0.0.0"]
    networks:
      - mongoCluster
    ports:
      - "27018:27017"
    volumes:
      - mongo2_data:/data/db

  mongo3:
    image: mongo:5
    container_name: mongo3
    command: ["mongod", "--replSet", "myReplicaSet", "--bind_ip", "0.0.0.0"]
    networks:
      - mongoCluster
    ports:
      - "27019:27017"
    volumes:
      - mongo3_data:/data/db

  mongo-init:
    image: mongo:5
    container_name: mongo-init
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - mongoCluster
    entrypoint: >
      bash -c "
        sleep 30;  # Adjust sleep time if necessary
        mongosh --host mongo1:27017 --eval '
          rs.initiate({
            _id: \"myReplicaSet\",
            members: [
              { _id: 0, host: \"mongo1:27017\" },
              { _id: 1, host: \"mongo2:27017\" },
              { _id: 2, host: \"mongo3:27017\" }
            ]
          })
        '
      "

  yolo5:
    build:
      context: ./yolo5
      dockerfile: Dockerfile
    container_name: yolo5
    platform: linux/amd64
    environment:
      - BUCKET_NAME=${BUCKET_NAME}
      - MONGO_URI=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=myReplicaSet
      - MONGO_DB=default_db
      - MONGO_COLLECTION=predictions
    networks:
      - mongoCluster
    ports:
      - "8081:8081"
    volumes:
      - $HOME/.aws:/root/.aws
      - ./yolo5:/usr/src/app/yolo5

  polybot:
    image: liranmil/polybotv2:latest
    container_name: polybot
    depends_on:
      - mongo1
      - mongo2
      - mongo3
      - yolo5
    networks:
      - mongoCluster
    ports:
      - "8443:8443"
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - BOT_APP_URL=${BOT_APP_URL}
      - MONGO_URI=mongodb://mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=myReplicaSet
      - MONGO_DB=default_db
      - MONGO_COLLECTION=${MONGO_COLLECTION}
      - BUCKET_NAME=${BUCKET_NAME}
    restart: unless-stopped
    volumes:
      - ~/.aws:/root/.aws

networks:
  mongoCluster:
    driver: bridge

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
